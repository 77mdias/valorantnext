@use '../../../../styles/tokens' as tokens;

.progressOverview {
  margin-bottom: tokens.$spacing-2xl;
}

.header {
  text-align: center;
  margin-bottom: tokens.$spacing-xl;
}

.title {
  font-size: tokens.$font-size-2xl;
  font-weight: tokens.$font-weight-bold;
  color: var(--text-primary);
  margin: 0 0 tokens.$spacing-sm 0;
}

.subtitle {
  font-size: tokens.$font-size-lg;
  color: var(--text-secondary);
  margin: 0;
  font-weight: tokens.$font-weight-medium;
}

.cardsGrid {
  @include tokens.grid-responsive(1, 2, 4);
  max-width: tokens.$container-max-width;
  margin: 0 auto;
  
  // Ajustes responsivos específicos
  @media (max-width: tokens.$breakpoint-sm) {
    gap: tokens.$spacing-sm;
    padding: 0 tokens.$spacing-md;
  }
  
  @media (min-width: tokens.$breakpoint-md) and (max-width: tokens.$breakpoint-lg) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 600px;
  }
}

// Estados especiais
.loading {
  .cardsGrid {
    pointer-events: none;
  }
}

// Animação de entrada
.cardsGrid > * {
  animation: slideUp 0.6s ease-out;
  animation-fill-mode: both;
  
  @for $i from 1 through 4 {
    &:nth-child(#{$i}) {
      animation-delay: #{($i - 1) * 0.1}s;
    }
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Melhorias de acessibilidade
@media (prefers-reduced-motion: reduce) {
  .cardsGrid > * {
    animation: none;
  }
}

// Hover effects no container
.cardsGrid:hover > :not(:hover) {
  opacity: 0.8;
  transform: scale(0.98);
}

.cardsGrid > * {
  transition: opacity var(--transition-normal), transform var(--transition-normal);
}
